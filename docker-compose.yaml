version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deepscan_web
    restart: unless-stopped
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - INFERENCE_API_URL=http://api:9010
    depends_on:
      - db
      - redis
      - api
    networks:
      - deepscan_network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: deepscan_api
    restart: unless-stopped
    volumes:
      - ./api/models:/app/models
      - ./api/uploads:/app/uploads
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_DATABASE}
    depends_on:
      - db
    networks:
      - deepscan_network

  db:
    image: mariadb:10.11
    container_name: deepscan_db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/init:/docker-entrypoint-initdb.d
    networks:
      - deepscan_network

  redis:
    image: redis:7-alpine
    container_name: deepscan_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - deepscan_network

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  deepscan_network:
    driver: bridge